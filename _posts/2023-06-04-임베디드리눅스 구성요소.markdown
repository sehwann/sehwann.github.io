---
layout: post
title:  "임베디드 리눅스의 구성요소"
date:   2023-06-04 16:30:32 +0000
categories: Embedded Linux
---
임베디드 리눅스를 구성하는 요소는?<br>
# 　

임베디드 리눅스는 크게 **[툴체인, 부트로더, 커널, 파일시스템]** 4가지 구성요소로 이루어져 있어.<br>
각 요소가 어떤 역할을 하는지 알아보자.<br>
<br>

# 임베디드 리눅스 구성요소

## 툴 체인(Toolchain)<br>
툴 체인은 임베디드 리눅스 보드에서의 첫 시작이야.<br>
개발도구모음을 뜻하고, 대게 **크로스 컴파일 환경**을 뜻해.<br>
<br>
간단하게 임베디드 시스템 개발을 위해서는 크로스 컴파일러가 꼭 필요한데,<br>
Host(PC)에서 작성한 코드를 MCU에 맞게 컴파일을 해서 바이너리파일로 만들어주기 때문이지.<br>
즉,

**Host 시스템에서 작성한 코드가, Target 시스템에서도 동작하도록 도와주는 컴파일러**야.<br>
<br>
여기서 툴체인은 Target 시스템에서 동작하는 프로그램 개발을 위한 Host 시스템에서의 개발환경을 통칭해.<br>
<br>
표준 툴 체인은 [Binutils, gcc, c libaray] 3가지 요소로 이루어져 있어. (GDB는 디버거)<br>

* binary utilities : 어셈블러, loader, 기타 tools
* GCC : C와 C++컴파일러의 집합
* C libaray : 컴파일러 구축을 위한 라이브러리 및 일반 라이브러리
<br>
우리가 자주 들어본, 자주 들을 GCC라는 좋은 컴파일러가 있지.<br>
툴 체인을 통해 원하는 프로세스의 크로스 컴파일을 할 수 있어.<br>

```javascript
    arm-linux-gcc
```


## 부트로더(Bootloader)<br>
부트로더는 부팅 시에 가장 먼저 실행되고,<br>
**리눅스 운영체제의 커널이미지를 메모리에 로드하고 파라미터를 커널에 넘겨주는 등**<br>
**부팅 전반에 대한 작업들을 진행해줘.**<br>
<br>
전원 버튼을 누른 순간부터 로그인 화면이 나타날 때까지의 코드가 바로 부트로더인거지.<br>
<br>
칩에 전원이 인가되고 부트로더 코드의 첫 줄이 실행 될 때,<br>
U-Boot(또는 다른 임베디드 부트로더)가 실행돼서,<br>
최소한의 디바이스, 메모리, 칩 설정 등을 구성하여 주요 운영 체제를 로드하고 시작할 수 있도록 해줘.<br>
그러고 제어권은 부트로더에서 커널로 넘어가.<br>
커널이 실행되면 부트로더가 사용하던 메모리 영역은 해제되어 사라지고,<br>
부트로더가 가지고 있던 시스템과 H/W관련 주요정보가 사라져.<br>
<br>

## 커널(Kernel)<br>
저번 포스팅에서도 작성했는데,<br>
**커널은 운영체제 중 항상 메모리에 올라가 있는 운영체제의 핵심부분이야.**<br>
**하드웨어와 응용프로그램 사이에서 인터페이스를 제공하는 역할과 컴퓨터 자원들을 관리하는 역할을 해.**<br>
우리가 물리적인 하드웨어(CPU, 메모리, 스토리지 등)에 접근과 사용할 수 있도록 도와주는 매개체 역할이지.<br>
이런 커널에, 사용자 애플리케이션을 더하면 운영체제(완전한 리눅스)가 되는거야.<br>
리눅스 커널에 다양한 확장 애플리케이션을 추가하여 운영체제를 제공하여 배포한 것이 Ubuntu, CentOS 인거지.<br>

**커널 기능**|**대상 하드웨어**|**설명**
:---|:---|:---
프로세스 관리 | CPU | 프로세스에 CPU 할당
메모리 관리| 메인 메모리 | 프로세스에 메모리 할당
스토리지 관리| 스토리지 | 프로세스에서 스토리지로 데이터 읽기 및 쓰기
I/O디바이스| 모든기기 관리 | 장치의 입출력

<br>

## 파일시스템(File System)<br>
저번 포스팅에서와 같이,<br>
파일 시스템은 파일에 이름을 붙이고 저장, 탐색을 위해 파일을 어디에 위치 시킬 것인지 나타내는 체계야.<br>
BIOS에의해 논리적으로 디스크의 공간에 주소를 할당해준 뒤 이 주소 정보를 어디에 저장하고,<br>
어떻게 사용할 지 본격적인 관리를 해주는 것이 파일시스템이야.<br>
<br>
파일시스템이 하는 역할은<br>
1. 데이터를 더 빠르게 읽고 저장할 수 있는 단위 블록을 소프트웨어적으로 계산하고,<br>
2. 분산저장된 연관된 데이터들을 빠르게 찾게 해줘.<br>
3. 디스크 조각(섹터)모음과 같이 디스크 공간을 효율적으로 사용하게 해.<br>

**파일시스템은 도서관에서 저자, 책 분류, 책 제목 등의 필터로**<br>
**검색 및 탐색이 쉽게 할 수 있도록 하는 것과 비슷한 맥락이야.**<br>
<br>
위의 세 가지를 각각 어떤 방식으로 하느냐 에 따라 파일 시스템의 종류가 달라져.<br>
최소한의 루트파일시스템을 구현하기 위해서는 디렉토리 아웃라인이 필요한데,<br>
FHS(Filesystem Hierarchy Standard)에 표준화 되어있어.<br>
따라서, 아무리 작은 리눅스 커널이라도 루트 디렉토리 하위에<br>
/bin, /dev, /etc, /lib, /proc, /sys, /sbin, /tmp, /usr, /var 10개의 서브 디렉토리를 가지고 있어.<br>

<br>
<br>


- - -
© 2023 sehwan.park, Inc. All Rights Reserved.




[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
