---
layout: post
title:  "리눅스와 임베디드리눅스의 차이점"
date:   2023-05-31 10:06:55 +0000
categories: Embedded Linux
---
우리는 임베디드리눅스를 공부하고 사용하게 될텐데,<br>
일반적인 리눅스와 임베디드 리눅스의 차이점을 알고있어?<br>
<br>

# 임베디드 리눅스와 리눅스의 차이점
임베디드 리눅스와 일반적인 데스크톱 리눅스 간에는 몇 가지 차이점이 있어.<br>
임베디드 리눅스는 제한된 자원을 고려해야 하고, 특정한 요구 사항을 충족시키기 위해 최적화되어 있다는 점이야.<br>
또한, 부트로더, 커널 구성, 파일 시스템 등의 측면에서도 필요한 부분만 커스터마이징을 통해서 사용을 해.<br>
<br>

1. 하드웨어 요구 사항
일반적인 리눅스는 다양한 하드웨어 환경에서 동작할 수 있도록 설계되어 있고,<br>
임베디드 리눅스는 주로 제한된 리소스를 가진 임베디드 시스템의 하드웨어에 최적화되어 있어.<br>
(메모리 크기, 저전력 소비, 특정 프로세서 아키텍처 등에 대한 지원으로 나타날 수 있어)<br>
<br>

2. 운영 체제 크기<br>
임베디드 리눅스는 작고 경량화된 운영 체제로 개발되어 일반적인 리눅스보다 훨씬 작은 운영 체제 크기를 가지는데, 리소스 제약이 있는 임베디드 시스템에서의 사용을 고려한 거야.<br>
<br>

3. 사용자 인터페이스<br>
일반적인 리눅스는 그래픽 사용자 인터페이스(GUI)를 제공하여 사용자가 키보드와 마우스를 통해 시스템을 조작할 수 있지만,<br>
임베디드 리눅스는 주로 CLI(Command Line Interface)를 사용하여 명령줄을 통해 시스템을 조작해.<br>
<br>

4. 기능과 패키지<br>
일반적인 리눅스는 다양한 응용 프로그램, 개발 도구, 그래픽 소프트웨어 등을 포함한 풍부한 기능과 패키지를 제공하는데, <br>
임베디드 리눅스는 일반적으로 필요한 기능과 패키지에만 중점을 두고 최소한의 크기로 유지해.<br>
<br>

5. 커널 구성
일반적인 리눅스는 보다 일반적인 용도를 고려하여 다양한 하드웨어와 기능을 지원하는 범용 커널을 사용하는데,<br>
임베디드 리눅스는 주로 커스텀된 커널 구성을 사용하여 필요한 하드웨어 및 기능에 대한 최적화를 실현 해.<br>
<br>
<br>

요약하자면, 
#### 일반적인 리눅스는 다양한 기능과 패키지, 그래픽 사용자 인터페이스, 범용적인 용도를 고려한 설계가 되어있고,<br>
#### 임베디드 리눅스는 작은 크기와 경량화된 설계, 하드웨어 제약에 대한 최적화, CLI 중심의 인터페이스 등으로 특징 지어져.<br>

전자제품에 범용적인 리눅스는 그대로 사용하기에는<br>
용량이 무겁고, 최소화와 경량화를 시켜야 하고, 안정성과 효율성을 고려해야하니, <br>
프로젝트에 맞게 커스터마이징을 해야한다는 거야.<br>
<br>

++추가 <br>

**Index**|**범용 리눅스**|**임베디드 리눅스**
:---|:---|:---
주 사용 용도|PC, 서버|임베디드 시스템 장치
사용 CPU|인텔, AMD 등|ARM, AVR32, MIPS, PowerPC, m68k 등
설치 방법|리눅스 배포판으로 손쉬운 설치|Bootloader, Kernel, FileSystem등을 별도로 TargetBoard에 사이즈를 줄여서 전송하여 설치. 절차복잡하고 난이도가 있음
주 사용자|서버관리자, 서버개발자|임베디드 시스템 개발자
자원 소모|충분한 HDD, RAM|한정된 RAM, Flash 등으로, 최소화/최적화 필요
패키지|레드햇(페도라계열),우분투(데비안계열) 등|안드로이드 SDK, BuildRoot, OpenWRT
S/W 업그레이드 용이성|자체 OS지원으로 용이|업그레이드는 개발자가 해줘야 함


그러면, <br>
굳이 작고 경량화된 운영 체제에 제한된 리소스를 가진 임베디드 시스템으로 개발을해야 하는 이유가 뭘까?<br>
다음 포스팅에서 알아보도록 하자.

<br>
<br>
- - -
© 2023 sehwan.park, Inc. All Rights Reserved.




[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
